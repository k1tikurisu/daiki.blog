---
import Layout from '../../layouts/Layout.astro';
import { getCollection, type CollectionEntry, render } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => {
    return data.draft !== true;
  });

  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<'posts'>;
};

const { post } = Astro.props;
const { Content } = await render(post);
---

<Layout title={post.data.title} description={post.data.description}>
  <article class="post">
    <header class="post-header">
      <h1 class="post-title">{post.data.title}</h1>
      <time class="post-meta" datetime={post.data.date.toISOString()}>
        {
          post.data.date.toLocaleDateString('ja-JP', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
          })
        }
      </time>
    </header>

    <div class="post-content">
      <Content />
    </div>
  </article>
</Layout>

<style>
  .post {
    max-width: var(--max-width);
  }

  .post-header {
    margin-bottom: 3rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--color-border);
  }

  .post-title {
    font-size: 2.25rem;
    font-weight: 700;
    line-height: 1.3;
    margin-bottom: 1rem;
    font-feature-settings: 'palt' 1;
  }

  .post-meta {
    color: var(--color-text-light);
    font-size: 0.95rem;
  }

  .post-content {
    font-size: 1rem;
    line-height: 1.8;
    font-feature-settings: 'palt' 1;
  }

  .post-content :global(h1) {
    font-size: 2rem;
    margin-top: 3rem;
    margin-bottom: 1.5rem;
    padding-bottom: 0.3rem;
    border-bottom: 2px solid var(--color-border);
  }

  .post-content :global(h2) {
    font-size: 1.5rem;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
    padding-bottom: 0.3rem;
    border-bottom: 1px solid var(--color-border);
  }

  .post-content :global(h3) {
    font-size: 1.25rem;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  .post-content :global(h4) {
    font-size: 1.125rem;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }

  .post-content :global(p) {
    margin-bottom: 1.5rem;
  }

  .post-content :global(ul),
  .post-content :global(ol) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .post-content :global(li) {
    margin-bottom: 0.5rem;
  }

  .post-content :global(blockquote) {
    border-left: 3px solid var(--color-border);
    padding-left: 1rem;
    margin: 1.5rem 0;
    color: var(--color-text-light);
  }

  .post-content :global(pre) {
    background-color: #f6f8fa;
    border-radius: 6px;
    padding: 1rem;
    margin: 1.5rem 0;
    overflow-x: auto;
    font-size: 0.875rem;
    line-height: 1.6;
  }

  .post-content :global(code) {
    font-family: var(--font-family-mono);
    font-size: 0.875em;
    background-color: #f6f8fa;
    padding: 0.2em 0.4em;
    border-radius: 3px;
  }

  .post-content :global(pre code) {
    background-color: transparent;
    padding: 0;
    font-size: inherit;
  }

  .post-content :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 1.5rem 0;
  }

  .post-content :global(th),
  .post-content :global(td) {
    padding: 0.75rem;
    border: 1px solid var(--color-border);
    text-align: left;
  }

  .post-content :global(th) {
    background-color: #f6f8fa;
    font-weight: 600;
  }

  .post-content :global(th[align="left"]), .post-content :global(td[align="left"]) {
    text-align: left;
  }

  .post-content :global(th[align="center"]), .post-content :global(td[align="center"]) {
    text-align: center;
  }

  .post-content :global(th[align="right"]), .post-content :global(td[align="right"]) {
    text-align: right;
  }

  .post-content :global(img) {
    max-width: 100%;
    height: auto;
    border-radius: 6px;
    margin: 1.5rem 0;
  }

  .post-content :global(hr) {
    border: none;
    border-top: 1px solid var(--color-border);
    margin: 2rem 0;
  }

  .post-content :global(a) {
    color: var(--color-link);
    text-decoration: none;
    border-bottom: 1px solid transparent;
    transition: border-color 0.2s;
  }

  .post-content :global(a:hover) {
    border-bottom-color: var(--color-link);
  }

  .post-content :global(strong) {
    font-weight: 600;
  }

  .post-content :global(em) {
    font-style: italic;
  }

  .post-content :global(dl) {
    margin-bottom: 1.5rem;
    border-left: 3px solid var(--color-border);
    padding-left: 1rem;
  }

  .post-content :global(dt) {
    font-weight: 600;
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    color: var(--color-text);
  }

  .post-content :global(dt:first-child) {
    margin-top: 0;
  }

  .post-content :global(dd) {
    margin-left: 1.5rem;
    margin-bottom: 0.75rem;
    color: var(--color-text-light);
    position: relative;
  }

  .post-content :global(dd:before) {
    content: "â†’";
    position: absolute;
    left: -1rem;
    color: var(--color-border);
  }

  .post-content :global(abbr) {
    text-decoration: underline dotted;
    cursor: help;
  }

  /* Hide abbr definition lines that start with *[ */
  .post-content :global(p[data-abbr-def]), .post-content :global(.abbr-definition) {
    display: none !important;
  }

  @media (max-width: 640px) {
    .post-title {
      font-size: 1.75rem;
    }

    .post-content {
      font-size: 0.95rem;
    }
  }
</style>
